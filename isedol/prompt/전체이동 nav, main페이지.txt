이세돌 n&m [news & music streaming]

- 목적
최신 정보 일람 및 플레이리스트 청취

- 이유
2025년 5월 이세계 아이돌 돔 공연 소식을 통해 정보를 빠르게 찾을 수 있고 처음 접하는 사람들에게 가장 인기있는 노래를 청취하게 함으로써 거부감을 감소시키기 위해

개인적 이유 : spa 방식 연습 및 서버리스 개발을 통해 1인개발의 효율성 확인

- 타겟
처음 이세계아이돌을 접하는 사람, 기존 팬 중 최신소식을 빠르게 알아보고 싶은 사람
 ㄴ 신규 유입, 기존 팬(유입 시기, 연령대, 목적[정보 탐색, 노래 청취])

- 수익구조 => 배너를 통한 이벤트 소식 전달에 대한 수수료

- 밴치마킹
왁스코드 - 알림 서비스 어플리케이션 => 소식 전달은 투출나나 이 외의 정보를 찾기 힘들다.
우왁굳 팬카페 => 다양한 정보가 한 자리에 있기 때문에 소식은 제일 빠르나 처음 유입은 복잡한 구조 때문에 유입되기 힘들다.

=> 간단한 구조를 통해 정보전달을 주된 목표로 하지만 다양한 인터렉션과 음악 청취기능을 포함하여 유니크함을 증가시킨다.


========================================================================
< 구조 >

통합구조 [ 모든 페이지에 적용 ]

- 상단 : nav => main / member / news / playlist -> music
- playbar 우측 상단 => 건의 talk
- 하단 : playbar

-- main
- banner
- member의 이미지와 간단한 설명 => 아이콘 클릭 => member 페이지로 이동 및 해당 멤버의 상세 정보 표시
- 최신곡 => 좌측 앨범, 우측 => 정보 및 가사의 일부 (상단부터 범위 초과는 ...으로 표시) -> 이름과 가수명, 유튜브 url, 카페, 가사
- award => 현재까지 달성한 결과
- 각 맴버별 최신 유튜브 영상

-- member
- 6개의 아이콘이 좌 우 화면 밖에서 3d의 y 축으로 회전하면서 겹치지 않는 위치에 화면에 위치
- floting을 통해 도착했을 때 상 하 움직임 반복
- 클릭 => 모든 아이콘의 opacity값이 천천히 감소하면서 사라진 후 좌측 화면 밖에서 우측으로 천천히 슬라이드가 움직어 화면을 채운 후 내부에 정보 출력

-- news
- 신곡소식 / 뱅온소식 / 컨텐츠 소식 / 정규 일정 소식으로 분류

-- playlist
- 전체 노래를 들을 수 있는 곡 외에도 + 버튼을 클릭해 원하는 플레이리스트 제작
--> music
- 좌측에는 엘범아트 및 가사 천천히 위로 스크롤
- 우측에는 댓글기능


========================================================================
전체 구조 및 섹션 분리하기

 사이트의 전체적인 구조 및 섹션을 구분할 것이다. 각 페이지에 존재하는 내용은 width가 1200px의 영역 내부에 존재한다.

페이지 구성
- MAIN / MEMBER / NEWS / PLAYLIST 페이지로 구성된다.

MAIN 페이지
1. 상단
1) 총 3개의 영역으로 분리된다.
2) 왼쪽/중간/오른쪽으로 구분이 된다.
3) 왼쪽에는 로고가 들어가는 공간으로 현재 존재하지 않으니 공간만 분리한다.
4) 중간은 페이지를 이동할 수 있는 곳으로 클릭하는 경우 페이지 구성에 선언한 페이지로 이동한다.
5) 오른쪽은 계정이 나타나며 현재 로그인한 user의 정보로 프로필 이미지와 닉네임, 로그인/로그아웃 버튼으로 구성된다. 현재는 존재하지 않으니 원형의 gray색 카드와 GUEST닉네임을 가진다.

2. 내용
1) 5개의 섹션이 존재하며 각 섹션의 이름은 banner / member / latest_song / award / video로 구분된다.
2) 현재는 내용이 존재하지 않기 때문에 단색 카드로 서로 다른 색을 이용하여 분리한다.

 위 인덱스를 준수하여 페이지를 만든다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장한다.디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.

========================================================================
위 코드는 제작해준 코드의 디자인을 수정한 내용이다. 이에 맞춰서 다음 내용을 제작한다.

배너영역 및 최신곡 영역을 제작한다.

배너영역에는 swiper를 이용한 슬라이드를 최신곡 영역에는 왼쪽과 오른쪽을 분리하여 영역을 분리시킨 후 내용을 넣는다. 각 섹션에 존재하는 내용은 해당 섹션의 틀을 벗어나지 않는다.

1. 배너영역
1) swiper를 이용해 5개의 슬라이드로 구성되며 현재는 단색카드를 이용하고 색은 해당 배너의 배색을 이용한다.
2) 현재 페이지 외에도 다수의 swiper를 이용한 슬라이더가 존재할 것이기 때문에 클래스 명칭은 banner혹은 main_banner를 명시한다.
3) 보여지는 슬라이드를 제외하고는 보이지 않게 제작하고 각 슬라이드는 5초 후 다음 슬라이드로 넘어가도록 제작한다.
4) 사용자가 드래그에 따라서도 슬라이드가 움직일 수 있어야 하며 좌우 next, prev 버튼을 통해서도 움직일 수 있어야 한다. 또한 아래 슬라이드 인덱스의 버튼에 따라서도 움직일 수 있어야 한다.

2. 최신곡 영역 (latest song section)
1) 해당 영역은 왼쪽과 오른쪽으로 총 2개로 분리시킨다.
2) 왼쪽에는 앨범아트가 들어갈 것이며 현재는 존재하지 않으니 단색 카드로 대체한다.
3) 해당 영역에 마우스가 올라가는 순간 시계반대방향으로 회전하며 opacity가 0으로 점차 사라져가고 다른 단색카드가 시계방향으로 회전하며 opacity가 100으로 회전하며 서로 교체되는 애니메션을 넣는다.
4) 마우스가 벗어나는 순간 다시 3번의 반대로 애니메이션이 동작하면서 원래 상태로 돌아간다.
5) 우측 영역에는 row방향으로 4개의 아이콘이 나열되어 있다.
6) 해당 영역에 마우스가 올라가는 순간 4개의 아이콘이 천천히 오른쪽 영역의 좌측에 세로로 정렬된 후 해당 아이콘의 우측에 설명글이 나타나게 된다.
7) 이 또한 마우스가 벗어나면 천천히 6번의 반대로 아이콘 우측 설명이 사라진 후 아이콘이 기존  row로 정렬되있는 위치로 이동하게 된다.

 위 인덱스를 준수하여 페이지를 만든다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장한다. 요구사항을 제작하는데 필요한 라이브러리는 cdn 방식으로 가져온다. 디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.

========================================================================
latest 섹션의 icon-item 내부 span은 row 애니메이션 종료 후 display를 none으로 수정한다. 그 후 vertical 클래스가 추가되었을 때 다시 출력되는 형식으로 한다.

========================================================================
member섹션 제작

 member섹션을 제작한다. row방향으로 총 6개의 원형 아이콘을 나열한 후 마우스를 올렸을 때 이벤트와 클릭했을 때 이벤트를 작성한다. 중복되는 기능을 사용할 때 충돌나지 않도록 member 혹은 main-member라는 이름으로 감싸도록한다. 

1. 기본상태
1) 원형으로 6개의 아이콘을 row로 나열하도록한다.
2) 서로 일정한 간격으로 위치하며 각 아이콘에 들어갈 이미지가 없기 때문에 단색 카드로 존재한다. 카드의 색은 #9b59b6 이 색의 배색들로 한다.
3) 각 아이콘에 마우스가 올라갔을 때 다음 2. 마우스가 올라갔을 때의 기능이 동작하도록 한다.

2. 마우스가 올라갔을 때
1) 아이콘의 외각을 따라 흰색으로 그림자가 생기도록 한다.
2) scale또한 조금 키워서 마우스가 올라갔다는 인식이 생기도록 한다.

3. 클릭했을 때
1) 좌측 끝과 우측 끝에서 중앙으로 접히는 느낌이 들도록 접는다.
2) 내부의 아이콘 또한 접는 애니메이션과 일치하게 움직여 중앙에 도달했을 때 사라진다.
3) 중앙에서부터 좌측 끝과 우측 끝까지 흰색 배경의 카드가 펼쳐진다.
4) 펼쳐진 카드에는 왼쪽과 오른쪽으로 2가지 영역으로 분리된다.
5) 왼쪽에는 3개의 사진이 들어가며 이는 단색 카드로 대체한다. 
6) 우측에는 자세한 정보가 들어가는 공간으로 임시 텍스트로 대체한다
7) 펼쳐진 카드의 우측 상단에는 빨간 배경의 x버튼이 존재하며 이 버튼을 부르는 경우 1. 기본상태로 돌아간다. 이는 transition을 이용하여 부드럽게 전환되도록 제작한다.

 기존 기능은 유지한 상태여야하며 위 인덱스를 준수하여 페이지를 만든다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장한다. 요구사항을 제작하는데 필요한 라이브러리는 cdn 방식으로 가져온다. 디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.

========================================================================
클릭하지 않았을 때는 member-detail이 display가 none이 되고 클릭했을때는 member-icons이 display가 none이 되도록 수정한다. member섹션의 높이는 10vh를 이용하며 클릭하지 않았을 때 6개의 아이콘이 존재하는 row는 중앙에 위치하도록 한다.
========================================================================
reward섹션 제작

 사이트의 전체적인 구조 및 섹션에 대한 내용이다. 각 페이지에 존재하는 내용은 width가 1200px의 영역 내부에 존재한다.

 리워드 섹션에서는 2개의 로우로 구성되며 각 로우에는 6개의 카드가 row 방향으로 존재한다. 다음 내용은 2개 중 한 개의 로우이며 서로 차이점은 로우가 움직이는 방향이 반대인 것이다.

1. 한 개의 row
1) row에는 6개의 카드가 존재한다.
2) row는 왼쪽에서 오른쪽으로 슬라이드되며 왼쪽 끝부분과 오른쪽 끝 부분에는 그림자처럼 가리는 판이 존재한다.
3) 이 판의 역할은 끝에 도달하는 경우 opacity가 점점 희미해 지는 역할을 한다.
4) 슬라이드의 끝 부분에는 첫 부분이 다시 출력되어 무한으로 회전하도록 만든다.
5) 회전하는 애니메이션은 transition을 이용하여 부드럽게 움직이도록 한다.

2. 다른 한개의 row
1) 1에서 정의한 row는 왼쪽에서 오른쪽이지만 2에서 정의하는 row는 오른쪽에서 왼쪽으로 이동하며 나머지 기능은 1. 한개의 row 와 동일하다.


 기존 기능은 유지한 상태여야하며 위 인덱스를 준수하여 페이지를 만든다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장하고 전체 코드를 출력한다. 요구사항을 제작하는데 필요한 라이브러리는 cdn 방식으로 가져온다. 디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.
========================================================================
VIDEO 섹션 제작

 일단 video섹션과 award 	섹션의 위치를 바꾼다. 즉 video 섹션 출력 후 award 섹션이 존재해야한다. video섹션은 스크롤 이벤트와 함께 동작한다. 스크롤을 통해 video 섹션의 높이 1/5정도 스크롤 되었을 때 다음 요구사항이 실행된다. 요구사항에 맞춰 6개의 카드가 영역 내 존재할 때 카드를 클릭하면 3.클릭이 실행되며 x를 누르는 경우 4. 닫기가 실행되게 된다.

1. 스크롤 이벤트
1) video섹션의 1/5정도 스크롤 되었을 때 실행된다.
2) 6개의 카드가 겹치지 않게 좌 우 반복되어 한 row에 2개씩 아래에서 위로 올라오면서 opacity가 0에서 100으로 자연스럽게 변화되면서 올라온다.
3) floting기능을 사용해 상하로 반복되며 움직인다.

2. 카드의 위치
1) 카드의 위치는 한 row에 한 카드의 width넓이 보다 넓은 값으로 랜됨되게 떨어져서 존재한다.

3. 클릭
1) 다른 카드를 점점 사라지게 만들고 해당 카드가 video영역의 가운데로 부드럽게 움직인다. 그 후 카드의 사이즈를 video영역의 width의 80%와 height의 80%로 늘린다.
2) 그 후 카드를 클릭하는 경우 원래는 내부에 존재하는 iframe으로 작성된 영상이 출력되도록 해야되지만 영상이 존재하지 않기 때문에 카드명에 click이라는 단어를 추가해 클릭 여부를 판별할 수 있게 한다.
3) 우측 상단에 빨간 배경의 x버튼이 존재하며 이 버튼을 누르는 경우 4. 닫기버튼 클릭이 실행된다. 

4. 닫기 버튼 클릭
1) 닫기버튼을 클릭하는 경우 1.스크롤이벤트의 3)floting기능을 하는 형태로 돌아가게 되는데 이 또한 자연스럽게 전환되도록 한다.

 기존 기능은 유지한 상태여야하며 위 인덱스를 준수하여 페이지를 만든다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장하고 전체 코드를 출력한다. 요구사항을 제작하는데 필요한 라이브러리는 cdn 방식으로 가져온다. 디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.
========================================================================

위 코드는 재작중인 프로젝트의 전체 코드이다. 여기서 award 아래 footer를 만든다.

footer 만들기

 footer는 좌 우 2개의 영역으로 나뉘며 왼쪽은 이미지, 오른쪽은 정보가 저장된다. 저장되는 이미지 혹은 정보는 1. 저장되는 내용 의 내용을 따른다. 왼쪽 이미지는 3개의 이미지가 중첩되어 있으며 z-index의 차이로 한 위치에 3개의 이미지가 존재하게 된다. 이미지 저장과 가운데 있는 이미지는 2. 이미지 저장 의 역할을 수행한다. 또한 3장의 이미지를 한 개로 묶어 3. 이미지 애니메이션 의 역할이 수행된다. 

1. 저장되는 내용
1) 왼쪽에는 3개의 이미지가 z-index의 차이로 겹쳐져 있다.
2) 뒤 이미지는 가려지지 않고 보이게 된다.
3) 현재는 소스가 없기 때문에 사각형, 원, 삼각형 순으로 도형이 서로 다른 색으로 구성되어 있다.
4) 오른쪽에는 name, email, git, address, tel, 저작권 등의 표시가 존재하며 이는 column 방향으로 정렬되어 있다.
5) 좌 우 존재하는 내용 전부 가운대 쪽에 존재한다.

2. 이미지 저장
1) 저장된 이미지 중 중간에 해당하는 원은 해당 위치에서 360도 회전을 무한하게 돌고있다
2) 이는 transition을 통해 부드럽게 회전하는 모습으로 구성된다.

3. 이미지 애니메이션
1) 왼쪽에 존재하는 3개의 겹쳐진 이미지는 하나로 묶여있다.
2) 이미지는 좌측 화면 밖에 존재한다.
3) 스크롤 시 footer의 영역이 보이는 순간부터 footer의 영역 1/2에 도착할 때까지 이미지는 좌측 화면 밖에서 1. 저장되는 내용에서 정의한 위치로 이동한다. 이는 transition을 이용해 부드럽게 이동하도록 한다.

 기존 기능은 유지한 상태여야하며 위 인덱스를 준수하여 페이지를 만든다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장하고 전체 코드를 출력한다. 요구사항을 제작하는데 필요한 라이브러리는 cdn 방식으로 가져온다. 디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.

========================================================================
알려준 코드에서 디자인의 위치값 등을 수정한 내용이다. 이를 전체 코드로 인지한다. 

video 섹션 반응형 수정

max-width가 425이하로 떨어지는 경우 배열을 수정한다.

1. 수정 내용
1) 랜덤된 위치에 존재하는 것이 아닌 한 row에 2개씩 정렬되어 존재한다. 즉 한 row에 2개씩 총 3개의 row로 존재하게 된다.
2) 클릭되는 경우 기존 반응 애니메이션 처럼 나머지 아이템은 점차 사라진 뒤 해당 섹션의 전체를 차지하고 우측 상단에 닫기버튼이 존재해 누르는 경우 1)의 상태로 돌아가게 된다.

 기존 기능은 유지한 상태여야하며 위 인덱스를 준수하여 페이지를 만든다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장하고 전체 코드를 출력한다. 요구사항을 제작하는데 필요한 라이브러리는 cdn 방식으로 가져온다. 디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.

========================================================================

화면이 425px 이하로 작아졌을 때 화면에 존재하지 않으며 랜덤된 위치에 이동하게 된다. 이러한 기능 없이 해당 섹션 중앙에 한 row에 2개씩 총 3개의 row로 존재하기를 원한다. 그 후 작아진 화면 전체를 기준으로 하여 섹션 전체의 사이즈로 커진 뒤 가운데 나타나는 425px보다 큰 경우 클릭했을 때의 경우와 동일하게 작동하기를 원한다.

 기존 기능을 유지한 상태여야 하며 위 요구사항에 맞춰 페이지를 제작 및 수정한다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장하고 전체 코드를 출력한다. 요구사항을 제작하는데 필요한 라이브러리는 cdn 방식으로 가져온다. 디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.

========================================================================

모든 페이지에서 사용하는 music playbar 만들기

  음악을 재생 및 중지 등 조작하는 music playbar를 제작한다. 해당 playbar는 뷰포트의 제일 하단에 고정되서 존재한다. 높이는 200px로 설정하며 width는 1200px 제한이 아닌 전체를 사용한다. 총 3개의 영역으로 분리되며 왼쪽, 중앙, 오른쪽으로 분리되며 영역은 1. 화면분리를 따른다. 
현재는 데이터가 한개만 존재하지 않기 때문에 이미지는 source/kidding.jpg 파일을, 텍스트 종류는 임시 텍스트, 아이콘은 정의한 모양으로 사용한다.

1. 화면분리
1) 왼쪽
[1] 2개의 영역으로 분리시킨다.
[2] 왼쪽에는 엘범아트만 존재한다. 
[3]오른쪽에는 제목과 가수 이름이 column으로정렬되어있다.

2) 중앙
[1] 2개의 row로 존재하며 이는 각 가운데 정렬로 존재한다.
[2] 상단의 row는 버튼들이 존재하며 재생목록 랜덤, 이전 곡, 재생/정지, 다음 곡, 반복 여부를 결정하는 버튼이 존재하며 이는 현재 아이콘이 없기 때문에 원형 아이콘 내부에 R, P, P/S, N, Re의 단어를 넣어서 대체한다.
[3] 하단의 row에는 3가지가 한 row에 존재하며 음악 재생시간, progressbar 형태의 재생 퍼센트, 음악 남은 시간을 표시한다. 음악 재생시간은 0:00부터 시작해 늘어나며 음악 남은 시간은 현재 한가지의 mp3파일만 존재하므로 3:36초인 kidding.mp3소요시간을 사용해 3:36초에서 음악 재생시간을 뺀다. 

3) 오른쪽
[1] 음악 재생의 사운드 크기를 progress bar를 통해 설정한다. 해당 바 아래에는 몇 퍼센트인지를 표시하는 숫자도 존재한다.

 음악 재생에 필요한 mp3파일은 source/kidding.mp3파일을 사용하며 음악 재생에 필요한 플레이리스트는 배열로 받아 현재는 kidding.mp3파일을 3개 반복해서 리스트를 만들어 실행한다.

 다음 요구사항에 정의되는 동작은 중앙에 존재하는 아이콘 버튼과 오른쪽 progressbar의 동작이다.

2. 동작
1) 중앙
[1] 재생목록 랜덤 : 플레이리스트의 순서를 랜덤하게 수정한다. 
[2] 이전 곡 : 현재 재생중인 mp3파일의 인덱스 - 1의 노래를 실행시킨다.
[3] 재생/정지 : 현재 재생중인 경우에는 재생 중지를 중지되어 있는 경우에는 재생한다.
[4] 다음 곡 : 현재 재생중인 mp3파일의 인덱스 + 1의 노래를 실행시킨다.
[5] 반복 여부 : 클릭한 경우 현재 플레이리스트를 temp에 저장시키고 플레이리스트를 현재 재생중인 mp3파일의 인덱스로 채운다. 다시 클릭하는 경우에는 temp에 저장되어 있는 플레이리스트의 배열을 가져와 재생 순서에 적용한다.

2) 왼쪽
[1] progress bar : 현재 재생중인 소리의 크기를 결정한다. 기본값으로 50%에 해당하며 100%에 가까울수록 mp3파일이 큰 소리를, 0%에 가까울 수록 작은 소리를 내도록 설정한다.
[2] 퍼센트 표시 텍스트 : progressbar의 퍼센트를 표시하며 progressbar를 수정할 때 해당 퍼센트에 맞추어 같이 수정된다.

 기존 기능은 유지한 상태여야하며 위 인덱스를 준수하여 페이지를 만든다. 페이지는 spa방식으로 구현할 것이며 html, css, js를 한 파일에 저장하고 전체 코드를 출력한다. 요구사항을 제작하는데 필요한 라이브러리는 cdn 방식으로 가져온다. 디자인은 요구사항을 충족하는 동시에 PC와 모바일간의 UX를 고려하여 구성한다.
========================================================================
main 페이지의 member섹션 수정

1. 각 아이콘에는 사진 3개에 대한 데이터와 오른쪽 영역에 작성되는 글에대한 정보를 가진다. 
2. 아이콘을 클릭하는 경우 해당 아이콘에 저장되어 있는 이미지와 글을 member-detail에 출력한다.

전체 코드를 출력하지 말고 수정이 필요한 html,css,js 내용을 출력해라. spa방식을 사용중이기 이를 따르며 위 인덱스에 준수하여 수정한다.